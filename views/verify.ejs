<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=1920, maximum-scale=1.0" />
    <link rel="shortcut icon" type="image/png" href="https://animaproject.s3.amazonaws.com/home/favicon.png" />
    <meta name="og:type" content="website" />
    <meta name="twitter:card" content="photo" />
    <link rel="stylesheet" type="text/css" href="css/verify.css" />
    <link rel="stylesheet" type="text/css" href="css/styleguide.css" />
    <link rel="stylesheet" type="text/css" href="css/globals.css" />
    <title>Verify</title>
    <link rel="icon" href="img/favicon.png" sizes="64x64" type="image/png">
  </head>
  <body style="margin: 0; background: #ffffff">
    <input type="hidden" id="anPageName" name="page" value="verify" />
    <div class="container-center-horizontal">
      <div class="verify screen">
        <div class="bg-Ds8wj3 bg">
          <img class="bg-ZJ58xL bg" src="img/bg-2@1x.png" alt="BG" />
          <div class="illustration-ZJ58xL">
            <img class="shape-bg-H94zFy animate-enter3" show-on-scroll src="img/shape-bg@1x.png" alt="shape bg" />
            <div class="leaf-H94zFy leaf animate-enter4" show-on-scroll>
              <img class="path-74-MZYErb" src="img/path-74@1x.png" alt="Path 74" />
              <img class="path-75-MZYErb" src="img/path-75@1x.png" alt="Path 75" />
            </div>
            <div class="leaf-NSnZfC leaf animate-enter5" show-on-scroll>
              <img class="path-76-91xJCV" src="img/path-76@1x.png" alt="Path 76" />
              <img class="path-77-91xJCV" src="img/path-77@1x.png" alt="Path 77" />
            </div>
            <img class="buttom-H94zFy" src="img/buttom@1x.png" alt="buttom" />
            <div class="right-paper-H94zFy animate-enter6">
              <img class="path-78-f0H8ba" src="img/path-78@1x.png" alt="Path 78" />
              <div class="group-41-f0H8ba">
                <img class="path-79-DhtZrf" src="img/path-79@1x.png" alt="Path 79" />
                <img class="path-80-DhtZrf" src="img/path-80@1x.png" alt="Path 80" />
                <img class="path-81-DhtZrf" src="img/path-81@1x.png" alt="Path 81" />
              </div>
            </div>
            <div class="left-papaer-H94zFy animate-enter7">
              <img class="path-82-JrbaoX" src="img/path-82@1x.png" alt="Path 82" />
              <div class="group-42-JrbaoX">
                <img class="path-83-CmRHsT" src="img/path-83@1x.png" alt="Path 83" />
                <img class="path-84-CmRHsT" src="img/path-84@1x.png" alt="Path 84" />
                <img class="path-85-CmRHsT" src="img/path-85@1x.png" alt="Path 85" />
              </div>
            </div>
            <div class="envelope-H94zFy animate-enter8">
              <img class="bg-envelope-ms0sNr" src="img/bg-envelope@1x.png" alt="bg envelope" />
              <div class="letter-ms0sNr">
                <img class="path-86-C2mRws" src="img/path-86@1x.png" alt="Path 86" />
                <img class="path-87-C2mRws" src="img/path-87@1x.png" alt="Path 87" />
              </div>
              <img class="path-88-ms0sNr" src="img/path-88@1x.png" alt="Path 88" />
              <img class="path-89-ms0sNr" src="img/path-89@1x.png" alt="Path 89" />
            </div>
            <div class="msg-icon-H94zFy animate-enter9">
              <img class="path-90-ioq3Sv" src="img/path-90@1x.png" alt="Path 90" />
              <img class="path-91-ioq3Sv" src="img/path-91@1x.png" alt="Path 91" />
            </div>
            <p class="check-your-email-for-H94zFy animate-enter10" show-on-scroll>
              Check your email for the verification code...
            </p>
          </div>
          <div class="logo-ZJ58xL">
            <div class="m-fJug20"><img class="path-92-Uz5Raw" src="img/path-92@1x.png" alt="Path 92" /></div>
            <div class="v-fJug20"><img class="path-93-PAugOB" src="img/path-93@1x.png" alt="Path 93" /></div>
            <div class="e-fJug20"><img class="path-94-o3lzgm" src="img/path-94@1x.png" alt="Path 94" /></div>
            <div class="group-43-fJug20">
              <img class="rectangle-9-HhZ30t" src="img/rectangle-9@1x.png" alt="Rectangle 9" />
            </div>
            <div class="group-44-fJug20">
              <img class="path-95-D015rx" src="img/path-95@1x.png" alt="Path 95" />
              <img class="path-96-D015rx" src="img/path-96@1x.png" alt="Path 96" />
              <img class="path-97-D015rx" src="img/path-97@1x.png" alt="Path 97" />
            </div>
            <div class="pin-fJug20">
              <img class="path-98-RySwNc" src="img/path-98@1x.png" alt="Path 98" />
              <div class="ellipse-5-RySwNc"></div>
            </div>
            <div class="box-fJug20">
              <img class="rectangle-10-MfYMkP" src="img/rectangle-10@1x.png" alt="Rectangle 10" />
            </div>
          </div>
        </div>
        <div class="verify-elems-Ds8wj3 animate-enter11">
          <form action="/verify" method="POST" id="verification-form">
            <div class="x4-digit-code-Jl0Jnp">
              <div class="group-382-kXKQRr">
                <div class="digit-1-Jebp2c"></div>
                <input class="x-Jebp2c roboto-normal-white-50px" name="digit1" placeholder="-" type="number" maxlength="1" required />
              </div>
              <div class="group-383-kXKQRr">
                <div class="digit-2-6qHuwU"></div>
                <input class="x-6qHuwU roboto-normal-white-50px" name="digit2" placeholder="-" type="number" maxlength="1" required />
              </div>
              <div class="group-384-kXKQRr">
                <div class="digit-3-S1iCxR"></div>
                <input class="x-S1iCxR roboto-normal-white-50px" name="digit3" placeholder="-" type="number" maxlength="1" required />
              </div>
              <div class="group-385-kXKQRr">
                <div class="digit-4-b1OoVx"></div>
                <input class="x-b1OoVx roboto-normal-white-50px" name="digit4" placeholder="-" type="number" maxlength="1" required />
              </div>
            </div>
        
            <!-- Verify button as a form submit trigger -->
            <div class="verify-button-Jl0Jnp smart-layers-pointers" onclick="document.getElementById('verification-form').submit();">
              <div class="rectangle-8-hYIhO1 smart-layers-pointers"></div>
              <h1 class="title-hYIhO1">Verify</h1>
            </div>
        
            <% if (message) { %>
              <div class="error-message">
                <p class="error-text"><%= message %></p>
              </div>
            <% } %>
          </form>
        </div>        
      </div>
    </div>
    <script>
      // Auto tab between input boxes
      const inputs = document.querySelectorAll('input[type="number"]');
      inputs.forEach((input, index) => {
        input.addEventListener('input', () => {
          if (input.value.length === 1 && index < inputs.length - 1) {
            inputs[index + 1].focus();
          }
        });
      });

// Handle verification when the verify button is clicked
document.querySelector('.verify-button-Jl0Jnp').addEventListener('click', async function (event) {
    event.preventDefault(); // Prevent default form submission behavior

    // Clear any previous error message
    const previousError = document.querySelector('.error-message');
    if (previousError) {
        previousError.remove(); // Completely remove the previous error message
    }

    // Collect the code from each input box
    const inputs = document.querySelectorAll('.x-Jebp2c, .x-6qHuwU, .x-S1iCxR, .x-b1OoVx');
    let verificationCode = '';
    let hasEmptyField = false; // To check if any input is empty

    // Loop over each input to ensure values are correctly captured
    inputs.forEach((input, index) => {
        const value = input.value.trim(); // Trim to avoid spaces being treated as input
        console.log(`Input ${index + 1} value:`, value); // Debugging to check input values

        if (!value) {
            console.log(`Input ${index + 1} is empty`); // Debug statement for empty input
            hasEmptyField = true;
        }

        verificationCode += value;
    });

    console.log('Full verification code:', verificationCode); // Debug statement to show the full code

    // Check if any field is empty
    if (hasEmptyField) {
        console.log("One or more digit fields are empty"); // Debug statement
        const messageDiv = document.createElement('div');
        messageDiv.classList.add('error-message');
        messageDiv.innerHTML = `<p class="error-text lato-black-white-46-8px">Please enter the full 4-digit code.</p>`;
        document.querySelector('.verify-elems-Ds8wj3').appendChild(messageDiv);
        return; // Stop form submission
    }

    // If the code length is correct, proceed with verification
    if (verificationCode.length === 4) {
        try {
            // Send the code to the server for verification
            console.log("Sending request to the server with code:", verificationCode); // Debug log before sending request

            const response = await fetch('/verify', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({
                    digit1: inputs[0].value,
                    digit2: inputs[1].value,
                    digit3: inputs[2].value,
                    digit4: inputs[3].value
                })
            });

            console.log("Response received from server:", response); // Log the response object

            // Check if the response is okay
            if (response.ok) {
                const result = await response.json();
                console.log('Verification successful:', result); // Debug statement
                // Redirect the user to the login page
                window.location.href = '/login';
            } else {
                const errorResult = await response.json();
                console.error('Verification failed with message:', errorResult.message); // Log the message from server
                // Show error message without refreshing the page
                const messageDiv = document.createElement('div');
                messageDiv.classList.add('error-message');
                messageDiv.innerHTML = `<p class="error-text lato-black-white-46-8px">${errorResult.message}</p>`;
                document.querySelector('.verify-elems-Ds8wj3').appendChild(messageDiv);
            }
        } catch (error) {
            console.error('Error during verification:', error.stack || error); // Log the entire error stack trace or object
            // Show error message for network error
            const messageDiv = document.createElement('div');
            messageDiv.classList.add('error-message');
            messageDiv.innerHTML = `<p class="error-text lato-black-white-46-8px">${errorResult.message}</p>`;
            document.querySelector('.verify-elems-Ds8wj3').appendChild(messageDiv);
        }
    } else {
        console.log('Invalid code length'); // Debug statement
        // Show error message for invalid code length or empty input
        const messageDiv = document.createElement('div');
        messageDiv.classList.add('error-message');
        messageDiv.innerHTML = `<p class="error-text lato-black-white-46-8px">Please enter a valid 4-digit code.</p>`;
        document.querySelector('.verify-elems-Ds8wj3').appendChild(messageDiv);
    }
});


      function ShowOnScroll() {
        this.toShow = [];
        this.nextEventY = undefined;
      }

      ShowOnScroll.prototype.show = function (e) {
        e.style.display = "";
      };

      ShowOnScroll.prototype.hide = function (e) {
        e.style.display = "none";
      };

      ShowOnScroll.prototype.getTop = function (e) {
        if (e.Top != undefined && e.Top != 0) {
          return e.Top;
        }
        var top = 0;
        var iter = e;
        do {
          top += iter.offsetTop || 0;
          iter = iter.offsetParent;
        } while (iter);
        e.Top = top;
        return top;
      };

      ShowOnScroll.prototype.onScroll = function () {
        var screenBottom = window.pageYOffset + window.innerHeight;
        if (this.nextEventY == undefined || this.nextEventY > screenBottom) {
          return;
        }
        this.nextEventY = undefined;
        for (var i = 0; i < this.toShow.length; i++) {
          var e = this.toShow[i];
          var top = this.getTop(e);
          if (top < screenBottom) {
            this.show(e);
            this.toShow.shift();
            i--;
          } else {
            this.nextEventY = top;
            break;
          }
        }
      };

      ShowOnScroll.prototype.resetScrolling = function () {
        // Clear state
        var screenBottom = window.pageYOffset + window.innerHeight;
        for (var i = 0; i < this.toShow.length; i++) {
          var e = this.toShow[i];
          this.show(e);
        }
        this.toShow = [];
        this.nextEventY == undefined;

        // Collect items
        var itemsToShowOnScroll = Array.prototype.slice.call(document.getElementsByTagName("*"));
        itemsToShowOnScroll = itemsToShowOnScroll.filter(function (e) {
          return e.getAttribute("show-on-scroll") != undefined;
        });
        var getTop = this.getTop;
        itemsToShowOnScroll.sort(function (a, b) {
          return getTop(a) - getTop(b);
        });
        for (var i = 0; i < itemsToShowOnScroll.length; i++) {
          var e = itemsToShowOnScroll[i];
          var top = this.getTop(e);
          if (top < screenBottom) {
            continue;
          }
          this.toShow.push(e);
          this.hide(e);
          this.nextEventY = this.nextEventY != undefined ? this.nextEventY : top;
        }
      };

      ShowOnScroll.prototype.handleEvent = function (e) {
        switch (e.type) {
          case "scroll":
            this.onScroll();
            break;
          case "resize":
            this.resetScrolling();
            break;
        }
      };

      ShowOnScroll.prototype.init = function () {
        this.resetScrolling();
        window.addEventListener("scroll", this);
        window.addEventListener("resize", this);
      };

      // After anima-src
      setTimeout(function () {
        var instShowOnScroll = new ShowOnScroll();
        instShowOnScroll.init();
      }, 250);
    </script>
  </body>
</html>
